// Copyright 2020, The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

cc_defaults {
    name: "libhardening_defaults",
    cpp_std: "c++2a",
    cflags: ["-Werror", "-Wall", "-Wextra", "-Wno-unused-parameter"],
    export_include_dirs: ["include/"],
    local_include_dirs: ["include/"],
    shared_libs: [
        "libbase",
        "liblog",
    ],
    tidy: true,
    tidy_checks: [
        "android-*",
        "cert-*",
        "clang-analyzer-security*",
        "-cert-err34-c",
        "clang-analyzer-security*",
        // Disabling due to many unavoidable warnings from POSIX API usage.
        "-google-runtime-int",
        "-google-explicit-constructor",
        // do not define variadic C function - JNI headers
        "-cert-dcl50-cpp",
        // operator=() does not handle self-assignment properly - all protobuf-generated classes
        "-cert-oop54-cpp",
        // do not call 'longjmp'; consider using exception handling instead - library relies on it
        "-cert-err52-cpp",
    ],
}

cc_library_static {
    name: "libhardening",
    defaults: ["libhardening_defaults"],
    host_supported: true,
    vendor_available: true,
    product_available: true,
    recovery_available: true,
    vendor_ramdisk_available: true,
    native_bridge_supported: true,
    vndk: {
        enabled: true,
    },
    srcs: [
        "signal_handling.cpp",
    ],
    export_include_dirs: ["include"],
    local_include_dirs: ["include/hardening"],

    target: {
        windows: {
            enabled: true,
        },
        linux_bionic: {
            enabled: true,
        },
    },

    apex_available: [
        "//apex_available:platform",
        "//apex_available:anyapex",
    ],
}

cc_benchmark {
    name: "hardening-benchmark",
    defaults: ["libhardening_defaults"],

    srcs: [
        "hardening_benchmark.cpp",
    ],
    static_libs: [
        "libhardening",
        "libincfs-utils",
        "libutils",
        "libincfs",
    ],
}